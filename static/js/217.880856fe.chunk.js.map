{"version":3,"file":"static/js/217.880856fe.chunk.js","mappings":"qSAEaA,EAAYC,EAAAA,GAAAA,IAAH,oN,SCGf,SAASC,IAAU,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,MAAO,CACLC,eAAgB,QAElBC,GAAE,oBAAEJ,EAASK,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAJ9B,UAME,UAACT,EAAD,YACE,SAAC,MAAD,IADF,cAML,CCnBM,IAAMA,EAAYC,EAAAA,GAAAA,IAAH,gGAMTS,EAAgBT,EAAAA,GAAAA,IAAH,0CAIbU,EAAiBV,EAAAA,GAAAA,IAAH,4CAIdW,EAAUX,EAAAA,GAAAA,EAAH,8DAKPY,EAAWZ,EAAAA,GAAAA,GAAH,+OCfN,SAASa,IACtB,IAAMX,GAAWC,EAAAA,EAAAA,MACTW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA6BC,GAA7B,6GAGYC,EAAAA,EAAAA,IAAmBD,GAH/B,gBAEYE,EAFZ,EAEYA,YAAaX,EAFzB,EAEyBA,MAAOY,EAFhC,EAEgCA,aAAcR,EAF9C,EAE8CA,SAAUE,EAFxD,EAEwDA,OAGpDP,EAAO,mCAAqCY,GAC5CV,EAASD,GACTG,EAAQU,KAAKC,MAA8B,IAAvBC,OAAOH,GAAuB,KAClDP,EAAYD,GAENY,EAAc,GACpBV,EAAOW,KAAI,SAAAC,GAAE,OAAIF,EAAYG,KAAKD,EAAGE,KAAxB,IACbb,EAAUS,EAAYK,KAAK,MAZ/B,kDAcIC,QAAQC,IAAI,KAAMC,SAdtB,2DADc,uBAAC,SAAD,2BAkBdC,CAAc9B,EACf,KAGC,iCACE,SAACb,EAAD,IACCkB,IACC,iCACE,UAAC,EAAD,YACE,SAACV,EAAD,CAAeQ,IAAKA,EAAK4B,IAAK1B,KAC9B,UAACT,EAAD,YACE,wBAAKS,KACL,wCAAgBE,EAAhB,QACA,sCACA,uBAAIE,KACJ,oCACA,uBAAIE,WAGR,SAACd,EAAD,sCACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CACEL,MAAO,CAAEC,KAAI,OAAEN,QAAF,IAAEA,EAAAA,EAAY,KAC3BI,GAAG,OAFL,qBAOF,yBACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAI,OAAEN,QAAF,IAAEA,EAAAA,EAAY,KAC3BI,GAAG,UAFL,8BAUNa,IAAS,kDACX,SAAC,KAAD,MAGL,C","sources":["components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  color: tomato;\n  font-weight: bold;\n  &:hover,\n  & a:focus {\n    color: #6c5ce7;\n  }\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { StyledDiv } from './GoBack.styled';\n\nexport function GoBack() {\n  const location = useLocation();\n\n  return (\n    <Link\n      style={{\n        textDecoration: 'none',\n      }}\n      to={location.state?.from ?? '/'}\n    >\n      <StyledDiv>\n        <AiOutlineArrowLeft />\n        Go Back\n      </StyledDiv>\n    </Link>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  border-bottom: 1px solid tomato;\n  padding: 20px;\n`;\n\nexport const StyledIMGMain = styled.img`\n  height: 400px;\n`;\n\nexport const StyledDivRight = styled.div`\n  padding: 0 10px;\n`;\n\nexport const StyledP = styled.p`\n  padding: 0 10px;\n  color: tomato;\n`;\n\nexport const StyledUl = styled.ul`\n  & a {\n    text-decoration: none;\n  }\n\n  & a:hover,\n  & a:focus {\n    color: #6c5ce7;\n  }\n\n  & a.active {\n    text-decoration-line: underline;\n    text-decoration-style: wavy;\n    color: #d63031;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { requestFilmDetails } from '../../services/api';\nimport { GoBack } from 'components/GoBack/GoBack';\nimport { StyledDiv, StyledDivRight, StyledIMGMain, StyledP, StyledUl } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [src, setSrc] = useState('');\n  const [title, setTitle] = useState('');\n  const [vote, setVote] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    async function fetchFilmByID(id) {\n      try {\n        const { poster_path, title, vote_average, overview, genres } =\n          await requestFilmDetails(id);\n\n        setSrc('https://image.tmdb.org/t/p/w500/' + poster_path);\n        setTitle(title);\n        setVote(Math.round((Number(vote_average) * 100) / 10));\n        setOverview(overview);\n\n        const genresArray = [];\n        genres.map(el => genresArray.push(el.name));\n        setGenres(genresArray.join(' '));\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchFilmByID(movieId);\n  });\n\n  return (\n    <>\n      <GoBack />\n      {title && (\n        <>\n          <StyledDiv>\n            <StyledIMGMain src={src} alt={title} />\n            <StyledDivRight>\n              <h1>{title}</h1>\n              <p>User Score: {vote}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres}</p>\n            </StyledDivRight>\n          </StyledDiv>\n          <StyledP>Additional information</StyledP>\n          <StyledUl>\n            <li>\n              <NavLink\n                state={{ from: location ?? '/'}}\n                to=\"cast\"\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                state={{ from: location ?? '/'}}\n                to=\"reviews\"\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </StyledUl>\n        </>\n      )}\n      {!title && <p>Sorry! No such movie.</p>}\n      <Outlet />\n    </>\n  );\n}\n"],"names":["StyledDiv","styled","GoBack","location","useLocation","style","textDecoration","to","state","from","StyledIMGMain","StyledDivRight","StyledP","StyledUl","MovieDetails","movieId","useParams","useState","src","setSrc","title","setTitle","vote","setVote","overview","setOverview","genres","setGenres","useEffect","id","requestFilmDetails","poster_path","vote_average","Math","round","Number","genresArray","map","el","push","name","join","console","log","message","fetchFilmByID","alt"],"sourceRoot":""}