{"version":3,"file":"static/js/6.a8d3080f.chunk.js","mappings":"mQAGO,SAASA,IAAW,IAAD,EAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,IAAI,UAAAF,EAASG,aAAT,eAAgBC,OAAQJ,EAD9B,oBAMH,CCRc,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA6BC,GAA7B,6GAIcC,EAAAA,EAAAA,IAAmBD,GAJjC,gBAGME,EAHN,EAGMA,YAAaX,EAHnB,EAGmBA,MAAOY,EAH1B,EAG0BA,aAAcR,EAHxC,EAGwCA,SAAUE,EAHlD,EAGkDA,OAG9CP,EAAO,mCAAqCY,GAC5CV,EAASD,GACTG,EAAQU,KAAKC,MAA8B,IAAvBC,OAAOH,GAAuB,KAClDP,EAAYD,GAENY,EAAc,GACpBV,EAAOW,KAAI,SAAAC,GAAE,OAAIF,EAAYG,KAAKD,EAAGE,KAAxB,IACbb,EAAUS,EAAYK,KAAK,MAb/B,kDAeIC,QAAQC,IAAI,KAAMC,SAftB,2DADc,uBAAC,SAAD,2BAmBdC,CAAc9B,EACf,KAGC,iCACE,SAACP,EAAD,IACCY,IACC,iCACE,gBAAKF,IAAKA,EAAK4B,IAAK1B,KACpB,wBAAKA,KACL,wCAAgBE,EAAhB,QACA,sCACA,uBAAIE,KACJ,oCACA,uBAAIE,KACJ,mDACA,2BACE,yBACE,SAAC,KAAD,CAASf,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAKNS,IAAS,kDACX,SAAC,KAAD,MAGL,C","sources":["components/GoBack/GoBack.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport function GoBack () {\n  const location = useLocation();\n\n  return (\n    <Link\n      to={location.state?.from || location}\n    >\n      Go Back\n    </Link>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\nimport { requestFilmDetails } from '../../services/api';\nimport { GoBack } from 'components/GoBack/GoBack';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [src, setSrc] = useState('');\n  const [title, setTitle] = useState('');\n  const [vote, setVote] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    async function fetchFilmByID(id) {\n      try {\n        const {\n          poster_path, title, vote_average, overview, genres,\n        } = await requestFilmDetails(id);\n\n        setSrc('https://image.tmdb.org/t/p/w500/' + poster_path);\n        setTitle(title);\n        setVote(Math.round((Number(vote_average) * 100) / 10));\n        setOverview(overview);\n\n        const genresArray = [];\n        genres.map(el => genresArray.push(el.name));\n        setGenres(genresArray.join(' '));\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchFilmByID(movieId);\n  });\n\n  return (\n    <>\n      <GoBack />\n      {title && (\n        <>\n          <img src={src} alt={title} />\n          <h1>{title}</h1>\n          <p>User Score: {vote}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">reviews</NavLink>\n            </li>\n          </ul>\n        </>\n      )}\n      {!title && <p>Sorry! No such movie.</p>}\n      <Outlet />\n    </>\n  );\n}\n"],"names":["GoBack","location","useLocation","to","state","from","MovieDetails","movieId","useParams","useState","src","setSrc","title","setTitle","vote","setVote","overview","setOverview","genres","setGenres","useEffect","id","requestFilmDetails","poster_path","vote_average","Math","round","Number","genresArray","map","el","push","name","join","console","log","message","fetchFilmByID","alt"],"sourceRoot":""}